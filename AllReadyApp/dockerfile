FROM mcr.microsoft.com/dotnet/core/sdk:2.2 as dotnet-builder

# Install Node.js LTS
RUN curl -sL https://deb.nodesource.com/setup_8.x | bash -
RUN apt-get install -y nodejs

RUN npm -g install gulp

WORKDIR /build/Web-App/AllReady
COPY ./Web-App/AllReady/package.json ./package.json
RUN npm install
WORKDIR /build

COPY ./AllReady.Core/AllReady.Core.csproj ./AllReady.Core/AllReady.Core.csproj
RUN dotnet restore ./AllReady.Core/AllReady.Core.csproj

COPY ./Web-App/AllReady/AllReady.csproj ./Web-App/AllReady/AllReady.csproj
RUN dotnet restore ./Web-App/AllReady/AllReady.csproj

COPY . .

# RUN dotnet build ./AllReady.Core/AllReady.Core.csproj --no-restore
RUN mkdir /published
RUN dotnet publish ./Web-App/AllReady/AllReady.csproj --output /published --no-restore
RUN gulp -f ./Web-App/AllReady/gulpfile.js min


FROM mcr.microsoft.com/dotnet/core/aspnet:2.2
WORKDIR /AllReadyApp
COPY --from=dotnet-builder /published .
COPY --from=dotnet-builder /build/Web-App/AllReady/wwwroot ./wwwroot

CMD ["dotnet", "AllReady.dll"]

# docker network create test
# docker run -d -e ACCEPT_EULA=y -e SA_PASSWORD=sa12345! -p 1433:1433 --name sql_1 --network test mcr.microsoft.com/mssql/server:2017-latest
# create database AllReady
# docker run -e DATA__HangfireConnection__ConnectionString=Server=sql_1;Database=AllReady;User=sa;Password=sa12345! -e DATA__DefaultConnection__ConnectionString=Server=sql_1;Database=AllReady;User=sa;Password=sa12345! --network test --rm allready-web-app:1 dotnet AllReady.dll


